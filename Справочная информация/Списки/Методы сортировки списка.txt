страница 77 в книге Python_Express-kurs_3-e_iz_-_Naomi_Seder_2019.pdf

Для сортировки списков используется встроенный метод Python sort:
>>> x = [3, 8, 4, 0, 2, 1]
>>> x.sort()
>>> x
[0, 1, 2, 3, 4, 8]
Метод выполняет сортировку «на месте», то есть с изменением сортируемого
списка. Если вы хотите отсортировать список без изменения исходного списка, 
возможны два варианта: либо использовать встроенную функцию sorted(), либо создать копию списка и отсортировать ее.
>>> x = [2, 4, 1, 3]
>>> y = x[:]
>>> y.sort()
>>> y
[1, 2, 3, 4]
>>> x
[2, 4, 1, 3]
Сортировка также работает со строками:
>>> x = ["Life", "Is", "Enchanting"]
>>> x.sort()
>>> x
['Enchanting', 'Is', 'Life']
--------------------------------------
У списков имеется встроенный метод для сортировки, но у других итерируемых 
типов Python (например, у ключей словаря) метода sort нет. У Python также имеется встроенная функция sorted(), 
которая возвращает отсортированный список, 
построенная на базе любого итерируемого типа. Функция sorted() использует те 
же параметры key и reverse, что и метод sort:
>>> x = (4, 3, 1, 2)
>>> y = sorted(x)
>>> y
[1, 2, 3, 4] 
>>> z = sorted(x, reverse=True)
>>> z
[4, 3, 2, 1]